Part I:
The Monty Hall Paradox. Marilyn cos Savant described the following problem (loosely based
on a game show by Monty Hall) in a popular magazine: “Suppose you are on a game show, and
you are given the choice of three doors: Behind one door is a car; behind the others, goats. You
pick a door, say No. 1, and the host, who know’s what is behind the doors, opens another door,
say No. 3, which has a goat. He then says to you, “Do you want to pick door No. 2?” Is it to
your advantage to switch your choice?”

Ms von Savant proved that it is to your advantage (to pick the other door).
Your task is to simulate this game show. In each iteration, randomly pick a door number
between 1 and 3 for placing the car. Randomly have the player pick a door. Randomly have the
game show host pick a door having a goat (but not the door that the player picked). Increment a
counter for strategy 1 if the player wins by switching to the third door, and increment a counter
for strategy 2 if the player wins by sticking with the original choice. Run 1,000 iterations and
print both counters.


Part II:
The game of Nim. This is a well-known game with a number of variants. The following variant
has an interesting winning strategy. Two players alternately take marbles from a pile. In each
move, a player chooses how many marbles to take. The player must take at least one but at most
have of the marbles. The the other player takes a turn. The player who takes the last marble
loses.

Write a java application in which the computer plays against a human opponent. Generate a
random integer between 10 and 100 to denote the initial size of the pile. Generate a random
integer between 0 and 1 to decide whether the computer or the human takes the first turn.
Generate a random integer between 0 and 1 to decide whether the computer plays smart or
stupid. In stupid mode, the computer simply takes a random legal value (between 1 and n/2)
from the pile whenever it has a turn. In smart mode, the computer takes off enough marbles to
make the size of the pile a power of two minus 1 - that is, 3, 7, 15, 31, or 63. That is always a
legal move, except when the size of the pile is currently one less than a power of two. In that
case, the computer makes a random legal move.

You will note that the computer cannot be beaten in smart mode when it has the first move,
unless the pile size happens to be 15, 31, or 63. Of course, a human player who has the first turn
and knows the winning strategy can win against the computer.




